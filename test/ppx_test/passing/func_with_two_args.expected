module type S  = sig type 'a t val f : int -> 'a t -> 'a t end[@@deriving
                                                                mica_types]
include
  struct
    type expr =
      | F of int * expr 
    type ty =
      | IntT 
    let gen_expr ty = let open Core.Quickcheck.Generator.Let_syntax in "TODO"
  end[@@ocaml.doc "@inline"][@@merlin.hide ]
